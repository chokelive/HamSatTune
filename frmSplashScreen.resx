<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>